name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

  build:
    name: Test build succeeds
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build
        run: go build -v ./...

  # unit:
  #   name: Run unit tests
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 2

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version-file: go.mod

  #     - name: Build
  #       run: go build -v ./...

  #     - name: Test
  #       run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
  #       timeout-minutes: 1

  #     - name: Upload coverage to Codecov
  #       run: bash <(curl -s https://codecov.io/bash)
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #       timeout-minutes: 1
